============================ GUI =======================================

SDL2: SDL always turns numlock off on startup but if it was on, the light
      remains on so its action appears inverted.
------------------------------------------------------------------------
SDL2: If you press Ctrl-F to switch to fullscreen and release Ctrl before
it has refreshed (usual case), it continues to think that Ctrl is held
until you press and release it again.
SDL1 works OK so this is an SDL2 bug - make a workaround?
------------------------------------------------------------------------
EMOTION: "End" key is not recognized (but the "Home" key is!)
k_end() is called, set_playing_position() too, but the graphic doesn't
scroll, and it continues to play from the start, not the end.
It works OK in EMOTION_SDL, so it's the sound player, not the GUI.
------------------------------------------------------------------------
With SDL1, a repeating key doesn't change its modifiers when you
press or release Shift or Ctrl. Instead the Shift/Ctrl state for the
repeated key remains whatever it was when you started the key repeat.
You have to release and press the key again to reflect the new modifiers.
OK in SDL2 and EMOTION.
------------------------------------------------------------------------
Capital command letters didn't used to work in SDL1 CACA driver over ssh.
Now, on a plain text console it fails:
Couldn't initialize SDL: Unable to open a console terminal.
and over ssh it fails:
Couldn't initialize SDL: Unable to open mouse.

============================ Calc ======================================

It calculates duplicate results when playing.
They seem mostly to be columns near or at the right edge.
------------------------------------------------------------------------
With 4 processors, it never uses 100% CPU, even when behind in its calculations.
Instead, the audio becomes stuttery, so presumably the calc threads are locking out
the audio playing thread, as well as locking each other out too much.
One solution might be to use the audio cache always and decode forwards instead of
seeking the audio file madly between the playing position and the right hand edge.

============================ Audio file ================================

libaudiofile returns half the audio data we asked for followed by half
silence, and the audio fragments it gives us is the requested sample
halved in time and doubled in frequency.
------------------------------------------------------------------------
libsox: MP3 decoding via MAD is noisy. Both audio and the graphic are bad.
This may be because it is seeking to the beginning/end of a frame instead
of to a sample.
------------------------------------------------------------------------
Playing MP3s with libmpg123 on a slow processor results in discontinuous audio
probably because decoding the audio for the right hand edge of the screen
is blocking the audio-file thread for too long. If it always decodes in a
straight line, could we launch it as a separate process?
Shouldn't it get the decoded audio from the audio cache?

Observation: Sometimes, when being lumpy, it takes
Locked audio file in 224352 us.
Locked audio file in 177735 us.
Locked audio file in 194932 us.
but there are not enough of these to match all the jumps in the audio;
usually it only takes max 2 us to lock the audio file, and locking
the audio cache always takes max 1us.

However, read_audio_file() is taking up to 12000 us, most commonly
3500-4000 us, or 3 or 4 milliseconds.
------------------------------------------------------------------------
libmpg123 without a cache doesn't even decode most of the audio, saying:
Can't seek to offset -1 in cache file: lseek returns 0 (6 times)
lseek: Illegal seek
Can't seek to offset -1 in cache file: lseek returns 1764
lseek: Illegal seek
Can't seek to offset -1 in cache file: lseek returns 3528
lseek: Illegal seek
Can't seek to offset -1 in cache file: lseek returns 5292
lseek: Illegal seek
Can't seek to offset -1 in cache file: lseek returns 7056
lseek: Illegal seek
Can't seek to offset -1 in cache file: lseek returns 8820
lseek: Illegal seek
Can't seek to offset -1 in cache file: lseek returns 10584
lseek: Illegal seek
colormap: array index is -2147483648 because value is -nan.
colormap: array index is -2147483648 because value is -nan.
colormap: array index is -2147483648 because value is -nan.
...

Was: libmpg123 without an audio_cache clags when end-of-file appears on screen.
libmpg123_read_frames() is whizzing at 100%CPU and playing stops because
the audio file is locked and hitting Space makes the main loop hang in
pause_audio::SDL_PauseAudio()
------------------------------------------------------------------------
libmpg123 with a cache says, when EOF appears on the screen:
"Error: Error reading the stream. (code 18)" a few dozen times.
------------------------------------------------------------------------
libmpg123 fails to open "letter from home 64kbps.mp3"

Error: Unable to set up output format! (code 1)Can't read the first frame.
But mpg123 can play it, saying it's  MPEG 2.0 L III cbr64 22050 j-s

============================ Other ======================================

On ciccio1, playing a Common Swift wav, the audio and graphics get out of sync

spettro -w 1280 -h 800 ~martin/rec/rondoni/*ll.wav

Spectrogram of Rondone #3 10-second call.wav
min_freq=178.696 max_freq=91492.1 fft_freq=40 dyn_range=100 speclen=550
Stopped at 9.89685 disp_time=9.89 step=0.01 from=3.49 to=16.29 audio_length=9.89685

and it also says

ALSA lib pcm.c:8306:(snd_pcm_recover) underrun occurred
ALSA lib pcm.c:8306:(snd_pcm_recover) underrun occurred
ALSA lib pcm.c:8306:(snd_pcm_recover) underrun occurred
ALSA lib pcm.c:8306:(snd_pcm_recover) underrun occurred
ALSA lib pcm.c:8306:(snd_pcm_recover) underrun occurred
------------------------------------------------------------------------
libaudiofile returns half-length double-frequency data for signed shorts.
------------------------------------------------------------------------
It doesn't play/display the second file, giving all-background
------------------------------------------------------------------------
EMOTION: softvol changes but has no effect
------------------------------------------------------------------------
