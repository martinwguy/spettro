============================ GUI =======================================

SDL2: SDL always turns numlock off on startup but if it was on, the light
      remains on so its action appears inverted.
------------------------------------------------------------------------
SDL2: If you press Ctrl-F to switch to fullscreen and release Ctrl before
it has refreshed (usual case), it continues to think that Ctrl is held
until you press and release it again.
SDL1 works OK so this is an SDL2 bug - make a workaround?
------------------------------------------------------------------------
When key-repeating a slow operation, the Shift state is measured when
the event is processed, not when the key was pressed.
------------------------------------------------------------------------
Capital command letters didn't used to work in SDL1 CACA driver over ssh.
Now, on a plain text console it fails:
Couldn't initialize SDL: Unable to open a console terminal.
and over ssh it fails:
Couldn't initialize SDL: Unable to open mouse.
------------------------------------------------------------------------
When it gets to the end of the piece, by playing or by [End],
the green line sometimes disappears.
The displayed area *is* 321 pixels wide, which is correct for 0-320.
At the last paint_column() of column 320, green_line_off is on.
This only seems to happen with swoop.wav, not with audio.wav
------------------------------------------------------------------------
If you zoom the frequency axis in a huge amount, you eventually get several
frequency-axis ticks with the same label. Extend the precision to include the
changing or extra digit.
------------------------------------------------------------------------
If you have beat lines displayed and move the mouse while holding Crtl
and a mouse button, and then drag (say) the left bar line into the
gray area left of the start,
the still-on-graphic right bar line reverts to one pixel thick, the same
as the beat lines.
------------------------------------------------------------------------
When piano and guitar lines are displayed, the guitar lines should become
3 pixels thick, score lines idem.

============================ Calc ======================================

It calculates duplicate results.

They seem mostly to be columns near the right hand side.
Hypothesis: a calc thread takes a pending column to calculate, removes
the work from the queue, a scroll happens and the same columns
results unrefreshable because there is no work item for it, but there
is no result in the result cache either.
Solution: Keep track of which results are being calculated.

============================ Audio file ================================

libaudiofile returns half the audio data we asked for followed by half
silence, and the audio fragments it gives us is the requested sample
halved in time and doubled in frequency.
------------------------------------------------------------------------
libsox: MP3 decoding via MAD is noisy. Both audio and the graphic are bad.
This may be because it is seeking to the beginning/end of a frame instead
of to a sample, There's code to take audio from halfway through a frame
in libav.c
------------------------------------------------------------------------
libav seeks to packet boundaries on MP3,FLAC,Ogg
------------------------------------------------------------------------
libav plays AAC and mp4 at one sixth of the speed.
------------------------------------------------------------------------
Playing MP3s with libmpg123 on a slow processor results in discontinuous audio

probably because decoding the audio for the right hand edge of the screen
is blocking the audio-file thread for too long. If it always decodes in a
straight line, could we launch it as a separate process?
Shouldn't it get the decoded audio from the audio cache?

Observation: Sometimes, when being lumpy, it takes
Locked audio file in 224352 us.
Locked audio file in 177735 us.
Locked audio file in 194932 us.
but there are not enough of these to match all the jumps in the audio;
usually it only takes max 2 us to lock the audio file, and locking
the audio cache always takes max 1us.

However, read_audio_file() is taking up to 12000 us, most commonly
3500-4000 us, or 3 or 4 milliseconds.
------------------------------------------------------------------------
libmpg123 without an audio_cache clags when end-of-file appears on the screen.

libmpg123_read_frames() is whizzing at 100%CPU and playing stops because
the audio file is locked and hitting Space makes the main loop hang in
pause_audio::SDL_PauseAudio()
------------------------------------------------------------------------
libmpg123 fails to open "letter from home 64kbps.mp3"

Error: Unable to set up output format! (code 1)Can't read the first frame.
But mpg123 can play it, saying it's  MPEG 2.0 L III cbr64 22050 j-s

============================ Other ======================================

On startup, the graphic is displayed a little too bright.
Repeat-by: ./spettro audio.wav
then press [Ctrl-L], and the image darkens slightly.
Put logmax code into ui.c as it affects the image.
------------------------------------------------------------------------
On ciccio1, playing a Common Swift wav, the audio and graphics get out of sync

spettro -w 1280 -h 800 ~martin/rec/rondoni/*ll.wav

Spectrogram of Rondone #3 10-second call.wav
min_freq=178.696 max_freq=91492.1 fft_freq=40 dyn_range=100 speclen=550
Stopped at 9.89685 disp_time=9.89 step=0.01 from=3.49 to=16.29 audio_length=9.89685

and it also says

ALSA lib pcm.c:8306:(snd_pcm_recover) underrun occurred
ALSA lib pcm.c:8306:(snd_pcm_recover) underrun occurred
ALSA lib pcm.c:8306:(snd_pcm_recover) underrun occurred
ALSA lib pcm.c:8306:(snd_pcm_recover) underrun occurred
ALSA lib pcm.c:8306:(snd_pcm_recover) underrun occurred
------------------------------------------------------------------------
