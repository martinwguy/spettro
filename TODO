------------------------------------------------------------------------
Be able to position the green line, disp_offset,
and also move it with Alt-Left/Right arrow, Home, End?
------------------------------------------------------------------------
Be able to display audio from a live source, presumably with the green
line on the right edge.
------------------------------------------------------------------------
Improve result cache so that we precalculate ahead of right screen edge
and so that we can cancel scheduled calculations that are no longer in
the time period we cache.
-> Keep track of scheduled calculations (in a double linked list in time
order with associated calc structure.
------------------------------------------------------------------------
Make playing multiple audio files work
------------------------------------------------------------------------
Add optional time axis at top and/or bottom
------------------------------------------------------------------------
Do subpixel positioning of bar lines / antialiasing.
------------------------------------------------------------------------
Do note lines and the 0 1 2 3 4 5 stuff to say how many beats per bar.
------------------------------------------------------------------------
Full-piece spectrogram in miniature along the bottom edge so that you can
seek to any position in a click and see which parts have been calculated?
------------------------------------------------------------------------
Add -m mute flag to be able to test emotion graphics.
This needs scrolling by regular timer, not by audio position.
------------------------------------------------------------------------
Try playing sound with SDL_Mixer (Ogg, MP3)
Mix_RewindMusic(); Mix_SetMusicPosition(double position)
(works with WAV and FLAC?)
Mix_FadeInMusicos(Mix_Music *music, 1, fade_ms, double position)
Mix_SetMusicCMD("mpg123")
------------------------------------------------------------------------
When adding score lines when there were none, just draw them on the display
instead of redisplaying the columns' spectral data.
When removing/changing such lines, repaint(all) is probably safest.
------------------------------------------------------------------------
Implement --smooth to synch scrolling to real time not playing-time.
Synch is good if I remember, with the reposition-ELF-on-resume tweak,
------------------------------------------------------------------------
Precalculate ahead in time to eliminate the flickering grey right hand
side.  The calc needs to be scheduled far enough ahead that the calc
threads have the time necessary to have it ready before that column
appears in the display area.
------------------------------------------------------------------------
Try scaling magnitudes with frequency to unweight its bottom-heaviness.
------------------------------------------------------------------------
Profile the max amplitude for each bin to derive an equalization function
------------------------------------------------------------------------
Give configure --with flags instead of Makefile's USE_ stuff.
------------------------------------------------------------------------
Move toolkit-specific stuff each to their own file.
------------------------------------------------------------------------
Be able to change disp_height and disp_width while running, so that
GUI window resizing becomes possible.
Check make_row_overlay()
------------------------------------------------------------------------
Should speclen be > (sample_rate/2)/fft_freq instead of near to it?
------------------------------------------------------------------------
Keep settings from one run to another (softvol, fftfreq etc)
------------------------------------------------------------------------
'-t' can be > audio_length, but check that emotion_set_time() > length works.
------------------------------------------------------------------------
Change Makefile flags to USE_SDL1/USE_SDL2
------------------------------------------------------------------------
Use Shift-B do darkness instead of 'd'.
------------------------------------------------------------------------
Be able to increase the number of labels/divisions on the frequency axis
------------------------------------------------------------------------
Add test suite using PNG output
------------------------------------------------------------------------
Decode MP3s from start to finish, preferably buffered with readahead.
------------------------------------------------------------------------
Does adding an axis change what it prints for "Displaying" with 'p'?
------------------------------------------------------------------------
Give the failure reason in an exit status
------------------------------------------------------------------------
Convert html to man page
------------------------------------------------------------------------
Instead of a scrolling time scale, just mark 3 points and use rest of
bottom/top line for status info.
------------------------------------------------------------------------
Be able to set spectrogram size in pixels or in seconds/frequency range.
there's already min-max freq, allow min/max, min/range max/range or
center/range.
------------------------------------------------------------------------
Recognise note names A0 in -n -x and the above.
------------------------------------------------------------------------
Make a ui struct of the parameters visible in main.c
------------------------------------------------------------------------
When zoomed in a lot, print enough digits on frequency axis to reveal
the digit that changes per tick.
------------------------------------------------------------------------
Add fine control of h-zoom with Ctrl.
------------------------------------------------------------------------
Make the desktop icon appear in the window manager.
------------------------------------------------------------------------
Make Ctrl-left click play from here.
------------------------------------------------------------------------
Mouse wheel does x-zoom?
------------------------------------------------------------------------
Add P to dump the whole thing to a file.
------------------------------------------------------------------------
Decode compressed audio front-to-back without seeking
------------------------------------------------------------------------
Have a way to turn the bar lines off.
------------------------------------------------------------------------
With libav, only cache compressed formats.
------------------------------------------------------------------------
Be able to save the audio fragment between left and right as a WAV file.
------------------------------------------------------------------------
Be able to play the l-r selection
Ctrl-L: play from left bar marker, then stop
Shift-L or C-S-L: play from left bar marker, then repeat
Ctrl-R: play from right bar marker onwards
------------------------------------------------------------------------
In libav, cache all of the decoded frame, not just the bit we wanted.
------------------------------------------------------------------------
Compile the Enlightenment port for Android, iOS and Windows!
------------------------------------------------------------------------
Pressing the same overlay key again cycles through white, black, none.
Idem for bar lines. So last_key_presssed?
------------------------------------------------------------------------
Incorporate amp into spettro.
"amp -c -q %s -", "filename.mp3" outputs 16-bit samples. How to find nchannels?
------------------------------------------------------------------------
Add failure return values from libav_open_audio_file() and libmpg123_*()
------------------------------------------------------------------------
In audio file reading, convert mono doubles to mono floats.
------------------------------------------------------------------------
Be able to tune A to a different frequency & up/down it via the GUI.
Or cmdline --tune A4=440.
If no octave given, --tune F#=710 retune the nearest F# to 710. (+ais aes)
------------------------------------------------------------------------
Implement status bar showing current settings:
left time pos             disptime                 right time pos
ppsec ppoct fftfreq window lbar rbar beats audio_length srate channels
------------------------------------------------------------------------
Show which bar lines are the left and right markers.
------------------------------------------------------------------------
Be able to drag bar lines with the mouse; the last-clicked one is the one
that remains still. Or something. Do we need this or is LR enough?
------------------------------------------------------------------------
